alias userSP R0;
alias currPID R1;
alias curr_process_table R2;
alias physicalPageNum R3;
alias offset R4;
alias fileDescriptor R5;
alias wordStoreAddress R6;


currPID = [SYSTEM_STATUS_TABLE + 1];
curr_process_table = PROCESS_TABLE + currPID*16;

[curr_process_table + 9] = 7;		//setting mode to syscall number of write i.e. 7 in PROCESS_TABLE
userSP = SP;

[curr_process_table  + 13] = SP;
SP = [curr_process_table + 11]*512 - 1;



physicalPageNum = [PTBR + 2*((userSP-4)/512)];
offset = (userSP-4)%512;

fileDescriptor = [physicalPageNum*512 + offset];



if(fileDescriptor != -1) then
	[[PTBR + 2*((userSP-1)/512)]*512 + ((userSP-1)%512)] = -1;	//settin return value to -1 at correct place in user stack

else
	physicalPageNum = [PTBR + 2*((userSP-3)/512)];
	offset = (userSP-3)%4;
	wordStoreAddress = [physicalPageNum*512 + offset];

	multipush (R0, R1, R2, R3, R4, R5, R6);
	R1 = 4;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R3 = wordStoreAddress;
	call MOD_4;		//calling DEVICE_MANAGER_MODULEI
	multipop  (R0, R1, R2, R3, R4, R5, R6);

	[[PTBR + 2*((userSP-1)/512)]*512 + ((userSP-1)%512)] = 0;	//settin return value to 0 at correct place in user stack
endif;

[curr_process_table + 9] = 0;		//setting MODE FLAG to 0 before return to user mode
SP = [curr_process_table + 13];		//restoring SP to USER STACK

ireturn;
